// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v4.24.4
// source: nuzur_extension.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecutionResponseType int32

const (
	ExecutionResponseType_EXECUTION_RESPONSE_TYPE_INVALID ExecutionResponseType = 0
	ExecutionResponseType_EXECUTION_RESPONSE_TYPE_FINAL   ExecutionResponseType = 1
	ExecutionResponseType_EXECUTION_RESPONSE_TYPE_STEP    ExecutionResponseType = 2
)

// Enum value maps for ExecutionResponseType.
var (
	ExecutionResponseType_name = map[int32]string{
		0: "EXECUTION_RESPONSE_TYPE_INVALID",
		1: "EXECUTION_RESPONSE_TYPE_FINAL",
		2: "EXECUTION_RESPONSE_TYPE_STEP",
	}
	ExecutionResponseType_value = map[string]int32{
		"EXECUTION_RESPONSE_TYPE_INVALID": 0,
		"EXECUTION_RESPONSE_TYPE_FINAL":   1,
		"EXECUTION_RESPONSE_TYPE_STEP":    2,
	}
)

func (x ExecutionResponseType) Enum() *ExecutionResponseType {
	p := new(ExecutionResponseType)
	*p = x
	return p
}

func (x ExecutionResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_nuzur_extension_proto_enumTypes[0].Descriptor()
}

func (ExecutionResponseType) Type() protoreflect.EnumType {
	return &file_nuzur_extension_proto_enumTypes[0]
}

func (x ExecutionResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionResponseType.Descriptor instead.
func (ExecutionResponseType) EnumDescriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{0}
}

type ExecutionStatus int32

const (
	ExecutionStatus_EXECUTION_STATUS_INVALID    ExecutionStatus = 0
	ExecutionStatus_EXECUTION_STATUS_INPROGRESS ExecutionStatus = 1
	ExecutionStatus_EXECUTION_STATUS_SUCCEEDED  ExecutionStatus = 2
	ExecutionStatus_EXECUTION_STATUS_FAILED     ExecutionStatus = 3
	ExecutionStatus_EXECUTION_STATUS_CANCELLED  ExecutionStatus = 4
)

// Enum value maps for ExecutionStatus.
var (
	ExecutionStatus_name = map[int32]string{
		0: "EXECUTION_STATUS_INVALID",
		1: "EXECUTION_STATUS_INPROGRESS",
		2: "EXECUTION_STATUS_SUCCEEDED",
		3: "EXECUTION_STATUS_FAILED",
		4: "EXECUTION_STATUS_CANCELLED",
	}
	ExecutionStatus_value = map[string]int32{
		"EXECUTION_STATUS_INVALID":    0,
		"EXECUTION_STATUS_INPROGRESS": 1,
		"EXECUTION_STATUS_SUCCEEDED":  2,
		"EXECUTION_STATUS_FAILED":     3,
		"EXECUTION_STATUS_CANCELLED":  4,
	}
)

func (x ExecutionStatus) Enum() *ExecutionStatus {
	p := new(ExecutionStatus)
	*p = x
	return p
}

func (x ExecutionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_nuzur_extension_proto_enumTypes[1].Descriptor()
}

func (ExecutionStatus) Type() protoreflect.EnumType {
	return &file_nuzur_extension_proto_enumTypes[1]
}

func (x ExecutionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionStatus.Descriptor instead.
func (ExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{1}
}

type ExecutionStepType int32

const (
	ExecutionStepType_EXECUTION_STEP_TYPE_INVALID                      ExecutionStepType = 0
	ExecutionStepType_EXECUTION_STEP_TYPE_CONFIRMATION                 ExecutionStepType = 1
	ExecutionStepType_EXECUTION_STEP_TYPE_DATAREQUEST                  ExecutionStepType = 2
	ExecutionStepType_EXECUTION_STEP_TYPE_DATAREQUEST_AND_CONFIRMATION ExecutionStepType = 3
)

// Enum value maps for ExecutionStepType.
var (
	ExecutionStepType_name = map[int32]string{
		0: "EXECUTION_STEP_TYPE_INVALID",
		1: "EXECUTION_STEP_TYPE_CONFIRMATION",
		2: "EXECUTION_STEP_TYPE_DATAREQUEST",
		3: "EXECUTION_STEP_TYPE_DATAREQUEST_AND_CONFIRMATION",
	}
	ExecutionStepType_value = map[string]int32{
		"EXECUTION_STEP_TYPE_INVALID":                      0,
		"EXECUTION_STEP_TYPE_CONFIRMATION":                 1,
		"EXECUTION_STEP_TYPE_DATAREQUEST":                  2,
		"EXECUTION_STEP_TYPE_DATAREQUEST_AND_CONFIRMATION": 3,
	}
)

func (x ExecutionStepType) Enum() *ExecutionStepType {
	p := new(ExecutionStepType)
	*p = x
	return p
}

func (x ExecutionStepType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionStepType) Descriptor() protoreflect.EnumDescriptor {
	return file_nuzur_extension_proto_enumTypes[2].Descriptor()
}

func (ExecutionStepType) Type() protoreflect.EnumType {
	return &file_nuzur_extension_proto_enumTypes[2]
}

func (x ExecutionStepType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionStepType.Descriptor instead.
func (ExecutionStepType) EnumDescriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{2}
}

type ExecutionStepDataInputType int32

const (
	ExecutionStepDataInputType_EXECUTION_STEP_DATA_INPUT_TYPE_INVALID  ExecutionStepDataInputType = 0
	ExecutionStepDataInputType_EXECUTION_STEP_DATA_INPUT_TYPE_UUID     ExecutionStepDataInputType = 1
	ExecutionStepDataInputType_EXECUTION_STEP_DATA_INPUT_TYPE_INTEGER  ExecutionStepDataInputType = 2
	ExecutionStepDataInputType_EXECUTION_STEP_DATA_INPUT_TYPE_FLOAT    ExecutionStepDataInputType = 3
	ExecutionStepDataInputType_EXECUTION_STEP_DATA_INPUT_TYPE_BOOLEAN  ExecutionStepDataInputType = 4
	ExecutionStepDataInputType_EXECUTION_STEP_DATA_INPUT_TYPE_STRING   ExecutionStepDataInputType = 5
	ExecutionStepDataInputType_EXECUTION_STEP_DATA_INPUT_TYPE_DATE     ExecutionStepDataInputType = 6
	ExecutionStepDataInputType_EXECUTION_STEP_DATA_INPUT_TYPE_DATETIME ExecutionStepDataInputType = 7
)

// Enum value maps for ExecutionStepDataInputType.
var (
	ExecutionStepDataInputType_name = map[int32]string{
		0: "EXECUTION_STEP_DATA_INPUT_TYPE_INVALID",
		1: "EXECUTION_STEP_DATA_INPUT_TYPE_UUID",
		2: "EXECUTION_STEP_DATA_INPUT_TYPE_INTEGER",
		3: "EXECUTION_STEP_DATA_INPUT_TYPE_FLOAT",
		4: "EXECUTION_STEP_DATA_INPUT_TYPE_BOOLEAN",
		5: "EXECUTION_STEP_DATA_INPUT_TYPE_STRING",
		6: "EXECUTION_STEP_DATA_INPUT_TYPE_DATE",
		7: "EXECUTION_STEP_DATA_INPUT_TYPE_DATETIME",
	}
	ExecutionStepDataInputType_value = map[string]int32{
		"EXECUTION_STEP_DATA_INPUT_TYPE_INVALID":  0,
		"EXECUTION_STEP_DATA_INPUT_TYPE_UUID":     1,
		"EXECUTION_STEP_DATA_INPUT_TYPE_INTEGER":  2,
		"EXECUTION_STEP_DATA_INPUT_TYPE_FLOAT":    3,
		"EXECUTION_STEP_DATA_INPUT_TYPE_BOOLEAN":  4,
		"EXECUTION_STEP_DATA_INPUT_TYPE_STRING":   5,
		"EXECUTION_STEP_DATA_INPUT_TYPE_DATE":     6,
		"EXECUTION_STEP_DATA_INPUT_TYPE_DATETIME": 7,
	}
)

func (x ExecutionStepDataInputType) Enum() *ExecutionStepDataInputType {
	p := new(ExecutionStepDataInputType)
	*p = x
	return p
}

func (x ExecutionStepDataInputType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionStepDataInputType) Descriptor() protoreflect.EnumDescriptor {
	return file_nuzur_extension_proto_enumTypes[3].Descriptor()
}

func (ExecutionStepDataInputType) Type() protoreflect.EnumType {
	return &file_nuzur_extension_proto_enumTypes[3]
}

func (x ExecutionStepDataInputType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionStepDataInputType.Descriptor instead.
func (ExecutionStepDataInputType) EnumDescriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{3}
}

type GetMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMetadataRequest) Reset() {
	*x = GetMetadataRequest{}
	mi := &file_nuzur_extension_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataRequest) ProtoMessage() {}

func (x *GetMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetMetadataRequest) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{0}
}

type GetMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	VersionUuid   string `protobuf:"bytes,2,opt,name=version_uuid,json=versionUuid,proto3" json:"version_uuid,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Author        string `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	NumberOfSteps int32  `protobuf:"varint,5,opt,name=numberOfSteps,proto3" json:"numberOfSteps,omitempty"`
}

func (x *GetMetadataResponse) Reset() {
	*x = GetMetadataResponse{}
	mi := &file_nuzur_extension_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataResponse) ProtoMessage() {}

func (x *GetMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetMetadataResponse) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{1}
}

func (x *GetMetadataResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetMetadataResponse) GetVersionUuid() string {
	if x != nil {
		return x.VersionUuid
	}
	return ""
}

func (x *GetMetadataResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetMetadataResponse) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *GetMetadataResponse) GetNumberOfSteps() int32 {
	if x != nil {
		return x.NumberOfSteps
	}
	return 0
}

type StartExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectUuid          string `protobuf:"bytes,1,opt,name=project_uuid,json=projectUuid,proto3" json:"project_uuid,omitempty"`
	ProjectVersionUuid   string `protobuf:"bytes,2,opt,name=project_version_uuid,json=projectVersionUuid,proto3" json:"project_version_uuid,omitempty"`
	ProjectExtensionUuid string `protobuf:"bytes,3,opt,name=project_extension_uuid,json=projectExtensionUuid,proto3" json:"project_extension_uuid,omitempty"` // for automatic extension execution
}

func (x *StartExecutionRequest) Reset() {
	*x = StartExecutionRequest{}
	mi := &file_nuzur_extension_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExecutionRequest) ProtoMessage() {}

func (x *StartExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExecutionRequest.ProtoReflect.Descriptor instead.
func (*StartExecutionRequest) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{2}
}

func (x *StartExecutionRequest) GetProjectUuid() string {
	if x != nil {
		return x.ProjectUuid
	}
	return ""
}

func (x *StartExecutionRequest) GetProjectVersionUuid() string {
	if x != nil {
		return x.ProjectVersionUuid
	}
	return ""
}

func (x *StartExecutionRequest) GetProjectExtensionUuid() string {
	if x != nil {
		return x.ProjectExtensionUuid
	}
	return ""
}

type StartExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionUuid string                     `protobuf:"bytes,1,opt,name=execution_uuid,json=executionUuid,proto3" json:"execution_uuid,omitempty"`
	Type          ExecutionResponseType      `protobuf:"varint,2,opt,name=type,proto3,enum=ExecutionResponseType" json:"type,omitempty"`
	Data          *ExecutionResponseTypeData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StartExecutionResponse) Reset() {
	*x = StartExecutionResponse{}
	mi := &file_nuzur_extension_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExecutionResponse) ProtoMessage() {}

func (x *StartExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExecutionResponse.ProtoReflect.Descriptor instead.
func (*StartExecutionResponse) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{3}
}

func (x *StartExecutionResponse) GetExecutionUuid() string {
	if x != nil {
		return x.ExecutionUuid
	}
	return ""
}

func (x *StartExecutionResponse) GetType() ExecutionResponseType {
	if x != nil {
		return x.Type
	}
	return ExecutionResponseType_EXECUTION_RESPONSE_TYPE_INVALID
}

func (x *StartExecutionResponse) GetData() *ExecutionResponseTypeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExecutionResponseTypeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Final *ExecutionResponseTypeFinalData `protobuf:"bytes,1,opt,name=final,proto3" json:"final,omitempty"`
	Step  *ExecutionResponseTypeStepData  `protobuf:"bytes,2,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *ExecutionResponseTypeData) Reset() {
	*x = ExecutionResponseTypeData{}
	mi := &file_nuzur_extension_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionResponseTypeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionResponseTypeData) ProtoMessage() {}

func (x *ExecutionResponseTypeData) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionResponseTypeData.ProtoReflect.Descriptor instead.
func (*ExecutionResponseTypeData) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{4}
}

func (x *ExecutionResponseTypeData) GetFinal() *ExecutionResponseTypeFinalData {
	if x != nil {
		return x.Final
	}
	return nil
}

func (x *ExecutionResponseTypeData) GetStep() *ExecutionResponseTypeStepData {
	if x != nil {
		return x.Step
	}
	return nil
}

type ExecutionResponseTypeFinalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          ExecutionStatus                  `protobuf:"varint,1,opt,name=status,proto3,enum=ExecutionStatus" json:"status,omitempty"`
	StatusMessage   string                           `protobuf:"bytes,2,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	FileDownloadUrl string                           `protobuf:"bytes,3,opt,name=file_download_url,json=fileDownloadUrl,proto3" json:"file_download_url,omitempty"`
	DisplayBlocks   []*ExecutionResponseDisplayBlock `protobuf:"bytes,4,rep,name=display_blocks,json=displayBlocks,proto3" json:"display_blocks,omitempty"`
}

func (x *ExecutionResponseTypeFinalData) Reset() {
	*x = ExecutionResponseTypeFinalData{}
	mi := &file_nuzur_extension_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionResponseTypeFinalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionResponseTypeFinalData) ProtoMessage() {}

func (x *ExecutionResponseTypeFinalData) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionResponseTypeFinalData.ProtoReflect.Descriptor instead.
func (*ExecutionResponseTypeFinalData) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{5}
}

func (x *ExecutionResponseTypeFinalData) GetStatus() ExecutionStatus {
	if x != nil {
		return x.Status
	}
	return ExecutionStatus_EXECUTION_STATUS_INVALID
}

func (x *ExecutionResponseTypeFinalData) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *ExecutionResponseTypeFinalData) GetFileDownloadUrl() string {
	if x != nil {
		return x.FileDownloadUrl
	}
	return ""
}

func (x *ExecutionResponseTypeFinalData) GetDisplayBlocks() []*ExecutionResponseDisplayBlock {
	if x != nil {
		return x.DisplayBlocks
	}
	return nil
}

type ExecutionResponseDisplayBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Content     string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ExecutionResponseDisplayBlock) Reset() {
	*x = ExecutionResponseDisplayBlock{}
	mi := &file_nuzur_extension_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionResponseDisplayBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionResponseDisplayBlock) ProtoMessage() {}

func (x *ExecutionResponseDisplayBlock) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionResponseDisplayBlock.ProtoReflect.Descriptor instead.
func (*ExecutionResponseDisplayBlock) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{6}
}

func (x *ExecutionResponseDisplayBlock) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExecutionResponseDisplayBlock) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExecutionResponseDisplayBlock) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ExecutionResponseTypeStepData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StepIdentifier string                         `protobuf:"bytes,1,opt,name=step_identifier,json=stepIdentifier,proto3" json:"step_identifier,omitempty"`
	Type           ExecutionStepType              `protobuf:"varint,2,opt,name=type,proto3,enum=ExecutionStepType" json:"type,omitempty"`
	DisplayBlock   *ExecutionResponseDisplayBlock `protobuf:"bytes,3,opt,name=display_block,json=displayBlock,proto3" json:"display_block,omitempty"`
	DataInputs     []*ExecutionStepDataInput      `protobuf:"bytes,4,rep,name=data_inputs,json=dataInputs,proto3" json:"data_inputs,omitempty"`
}

func (x *ExecutionResponseTypeStepData) Reset() {
	*x = ExecutionResponseTypeStepData{}
	mi := &file_nuzur_extension_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionResponseTypeStepData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionResponseTypeStepData) ProtoMessage() {}

func (x *ExecutionResponseTypeStepData) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionResponseTypeStepData.ProtoReflect.Descriptor instead.
func (*ExecutionResponseTypeStepData) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{7}
}

func (x *ExecutionResponseTypeStepData) GetStepIdentifier() string {
	if x != nil {
		return x.StepIdentifier
	}
	return ""
}

func (x *ExecutionResponseTypeStepData) GetType() ExecutionStepType {
	if x != nil {
		return x.Type
	}
	return ExecutionStepType_EXECUTION_STEP_TYPE_INVALID
}

func (x *ExecutionResponseTypeStepData) GetDisplayBlock() *ExecutionResponseDisplayBlock {
	if x != nil {
		return x.DisplayBlock
	}
	return nil
}

func (x *ExecutionResponseTypeStepData) GetDataInputs() []*ExecutionStepDataInput {
	if x != nil {
		return x.DataInputs
	}
	return nil
}

type ExecutionStepDataInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier  string                     `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	DisplayName string                     `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description string                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type        ExecutionStepDataInputType `protobuf:"varint,4,opt,name=type,proto3,enum=ExecutionStepDataInputType" json:"type,omitempty"`
	Required    bool                       `protobuf:"varint,5,opt,name=required,proto3" json:"required,omitempty"`
}

func (x *ExecutionStepDataInput) Reset() {
	*x = ExecutionStepDataInput{}
	mi := &file_nuzur_extension_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionStepDataInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStepDataInput) ProtoMessage() {}

func (x *ExecutionStepDataInput) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStepDataInput.ProtoReflect.Descriptor instead.
func (*ExecutionStepDataInput) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{8}
}

func (x *ExecutionStepDataInput) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ExecutionStepDataInput) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ExecutionStepDataInput) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExecutionStepDataInput) GetType() ExecutionStepDataInputType {
	if x != nil {
		return x.Type
	}
	return ExecutionStepDataInputType_EXECUTION_STEP_DATA_INPUT_TYPE_INVALID
}

func (x *ExecutionStepDataInput) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

type SubmitExectuionStepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StepIdentifier string                         `protobuf:"bytes,1,opt,name=step_identifier,json=stepIdentifier,proto3" json:"step_identifier,omitempty"`
	Confrimed      bool                           `protobuf:"varint,2,opt,name=confrimed,proto3" json:"confrimed,omitempty"`
	InputValues    []*ExecutionStepDataInputValue `protobuf:"bytes,3,rep,name=input_values,json=inputValues,proto3" json:"input_values,omitempty"`
}

func (x *SubmitExectuionStepRequest) Reset() {
	*x = SubmitExectuionStepRequest{}
	mi := &file_nuzur_extension_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitExectuionStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitExectuionStepRequest) ProtoMessage() {}

func (x *SubmitExectuionStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitExectuionStepRequest.ProtoReflect.Descriptor instead.
func (*SubmitExectuionStepRequest) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{9}
}

func (x *SubmitExectuionStepRequest) GetStepIdentifier() string {
	if x != nil {
		return x.StepIdentifier
	}
	return ""
}

func (x *SubmitExectuionStepRequest) GetConfrimed() bool {
	if x != nil {
		return x.Confrimed
	}
	return false
}

func (x *SubmitExectuionStepRequest) GetInputValues() []*ExecutionStepDataInputValue {
	if x != nil {
		return x.InputValues
	}
	return nil
}

type ExecutionStepDataInputValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Value      string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExecutionStepDataInputValue) Reset() {
	*x = ExecutionStepDataInputValue{}
	mi := &file_nuzur_extension_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionStepDataInputValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStepDataInputValue) ProtoMessage() {}

func (x *ExecutionStepDataInputValue) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStepDataInputValue.ProtoReflect.Descriptor instead.
func (*ExecutionStepDataInputValue) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{10}
}

func (x *ExecutionStepDataInputValue) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ExecutionStepDataInputValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SubmitExectuionStepResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionUuid string                     `protobuf:"bytes,1,opt,name=execution_uuid,json=executionUuid,proto3" json:"execution_uuid,omitempty"`
	Type          ExecutionResponseType      `protobuf:"varint,2,opt,name=type,proto3,enum=ExecutionResponseType" json:"type,omitempty"`
	Data          *ExecutionResponseTypeData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SubmitExectuionStepResponse) Reset() {
	*x = SubmitExectuionStepResponse{}
	mi := &file_nuzur_extension_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitExectuionStepResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitExectuionStepResponse) ProtoMessage() {}

func (x *SubmitExectuionStepResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitExectuionStepResponse.ProtoReflect.Descriptor instead.
func (*SubmitExectuionStepResponse) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{11}
}

func (x *SubmitExectuionStepResponse) GetExecutionUuid() string {
	if x != nil {
		return x.ExecutionUuid
	}
	return ""
}

func (x *SubmitExectuionStepResponse) GetType() ExecutionResponseType {
	if x != nil {
		return x.Type
	}
	return ExecutionResponseType_EXECUTION_RESPONSE_TYPE_INVALID
}

func (x *SubmitExectuionStepResponse) GetData() *ExecutionResponseTypeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetExecutionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionUuid string `protobuf:"bytes,1,opt,name=execution_uuid,json=executionUuid,proto3" json:"execution_uuid,omitempty"`
}

func (x *GetExecutionStatusRequest) Reset() {
	*x = GetExecutionStatusRequest{}
	mi := &file_nuzur_extension_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExecutionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionStatusRequest) ProtoMessage() {}

func (x *GetExecutionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionStatusRequest.ProtoReflect.Descriptor instead.
func (*GetExecutionStatusRequest) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{12}
}

func (x *GetExecutionStatusRequest) GetExecutionUuid() string {
	if x != nil {
		return x.ExecutionUuid
	}
	return ""
}

type GetExecutionStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                 ExecutionStatus `protobuf:"varint,1,opt,name=status,proto3,enum=ExecutionStatus" json:"status,omitempty"`
	StatusMsg              string          `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	TimeElapsed            string          `protobuf:"bytes,3,opt,name=time_elapsed,json=timeElapsed,proto3" json:"time_elapsed,omitempty"`
	EstimatedTimeRemaining string          `protobuf:"bytes,4,opt,name=estimated_time_remaining,json=estimatedTimeRemaining,proto3" json:"estimated_time_remaining,omitempty"`
	CurrentStep            string          `protobuf:"bytes,5,opt,name=current_step,json=currentStep,proto3" json:"current_step,omitempty"`
}

func (x *GetExecutionStatusResponse) Reset() {
	*x = GetExecutionStatusResponse{}
	mi := &file_nuzur_extension_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExecutionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutionStatusResponse) ProtoMessage() {}

func (x *GetExecutionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuzur_extension_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutionStatusResponse.ProtoReflect.Descriptor instead.
func (*GetExecutionStatusResponse) Descriptor() ([]byte, []int) {
	return file_nuzur_extension_proto_rawDescGZIP(), []int{13}
}

func (x *GetExecutionStatusResponse) GetStatus() ExecutionStatus {
	if x != nil {
		return x.Status
	}
	return ExecutionStatus_EXECUTION_STATUS_INVALID
}

func (x *GetExecutionStatusResponse) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *GetExecutionStatusResponse) GetTimeElapsed() string {
	if x != nil {
		return x.TimeElapsed
	}
	return ""
}

func (x *GetExecutionStatusResponse) GetEstimatedTimeRemaining() string {
	if x != nil {
		return x.EstimatedTimeRemaining
	}
	return ""
}

func (x *GetExecutionStatusResponse) GetCurrentStep() string {
	if x != nil {
		return x.CurrentStep
	}
	return ""
}

var File_nuzur_extension_proto protoreflect.FileDescriptor

var file_nuzur_extension_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6e, 0x75, 0x7a, 0x75, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9e, 0x01,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x53, 0x74, 0x65, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x74, 0x65, 0x70, 0x73, 0x22, 0xa2,
	0x01, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x34, 0x0a,
	0x16, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x35, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0xe4, 0x01, 0x0a, 0x1e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x45, 0x0a, 0x0e, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x22, 0x71, 0x0a, 0x1d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0xef, 0x01, 0x0a, 0x1d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x74, 0x65, 0x70, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x38, 0x0a, 0x0b,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x65, 0x70, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x74, 0x75, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x65,
	0x70, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x66, 0x72, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x72, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x1b, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xa0, 0x01, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x78, 0x65, 0x63, 0x74, 0x75,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x42, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6c, 0x61, 0x70, 0x73, 0x65,
	0x64, 0x12, 0x38, 0x0a, 0x18, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x2a, 0x81,
	0x01, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x45, 0x58, 0x45, 0x43,
	0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a,
	0x1d, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x10, 0x01,
	0x12, 0x20, 0x0a, 0x1c, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x45, 0x50,
	0x10, 0x02, 0x2a, 0xad, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x50, 0x52, 0x4f, 0x47, 0x52,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45,
	0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44,
	0x10, 0x04, 0x2a, 0xb5, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x58, 0x45, 0x43,
	0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x58, 0x45,
	0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12,
	0x23, 0x0a, 0x1f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x45,
	0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x02, 0x12, 0x34, 0x0a, 0x30, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x2a, 0xf4, 0x02, 0x0a, 0x1a, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x26, 0x45, 0x58, 0x45,
	0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x10, 0x01, 0x12, 0x2a,
	0x0a, 0x26, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x45, 0x50,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x45, 0x58,
	0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f,
	0x41, 0x54, 0x10, 0x03, 0x12, 0x2a, 0x0a, 0x26, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x04,
	0x12, 0x29, 0x0a, 0x25, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x45, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x27, 0x0a, 0x23, 0x45,
	0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41,
	0x54, 0x45, 0x10, 0x06, 0x12, 0x2b, 0x0a, 0x27, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10,
	0x07, 0x32, 0xb6, 0x02, 0x0a, 0x0e, 0x4e, 0x75, 0x7a, 0x75, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45,
	0x78, 0x65, 0x63, 0x74, 0x75, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1b, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x78, 0x65, 0x63, 0x74, 0x75, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x45, 0x78, 0x65, 0x63, 0x74, 0x75, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x28, 0x0a, 0x0e, 0x6e, 0x75,
	0x7a, 0x75, 0x72, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x4e, 0x75,
	0x7a, 0x75, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x01, 0x5a, 0x04,
	0x67, 0x65, 0x6e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nuzur_extension_proto_rawDescOnce sync.Once
	file_nuzur_extension_proto_rawDescData = file_nuzur_extension_proto_rawDesc
)

func file_nuzur_extension_proto_rawDescGZIP() []byte {
	file_nuzur_extension_proto_rawDescOnce.Do(func() {
		file_nuzur_extension_proto_rawDescData = protoimpl.X.CompressGZIP(file_nuzur_extension_proto_rawDescData)
	})
	return file_nuzur_extension_proto_rawDescData
}

var file_nuzur_extension_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_nuzur_extension_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_nuzur_extension_proto_goTypes = []any{
	(ExecutionResponseType)(0),             // 0: ExecutionResponseType
	(ExecutionStatus)(0),                   // 1: ExecutionStatus
	(ExecutionStepType)(0),                 // 2: ExecutionStepType
	(ExecutionStepDataInputType)(0),        // 3: ExecutionStepDataInputType
	(*GetMetadataRequest)(nil),             // 4: GetMetadataRequest
	(*GetMetadataResponse)(nil),            // 5: GetMetadataResponse
	(*StartExecutionRequest)(nil),          // 6: StartExecutionRequest
	(*StartExecutionResponse)(nil),         // 7: StartExecutionResponse
	(*ExecutionResponseTypeData)(nil),      // 8: ExecutionResponseTypeData
	(*ExecutionResponseTypeFinalData)(nil), // 9: ExecutionResponseTypeFinalData
	(*ExecutionResponseDisplayBlock)(nil),  // 10: ExecutionResponseDisplayBlock
	(*ExecutionResponseTypeStepData)(nil),  // 11: ExecutionResponseTypeStepData
	(*ExecutionStepDataInput)(nil),         // 12: ExecutionStepDataInput
	(*SubmitExectuionStepRequest)(nil),     // 13: SubmitExectuionStepRequest
	(*ExecutionStepDataInputValue)(nil),    // 14: ExecutionStepDataInputValue
	(*SubmitExectuionStepResponse)(nil),    // 15: SubmitExectuionStepResponse
	(*GetExecutionStatusRequest)(nil),      // 16: GetExecutionStatusRequest
	(*GetExecutionStatusResponse)(nil),     // 17: GetExecutionStatusResponse
}
var file_nuzur_extension_proto_depIdxs = []int32{
	0,  // 0: StartExecutionResponse.type:type_name -> ExecutionResponseType
	8,  // 1: StartExecutionResponse.data:type_name -> ExecutionResponseTypeData
	9,  // 2: ExecutionResponseTypeData.final:type_name -> ExecutionResponseTypeFinalData
	11, // 3: ExecutionResponseTypeData.step:type_name -> ExecutionResponseTypeStepData
	1,  // 4: ExecutionResponseTypeFinalData.status:type_name -> ExecutionStatus
	10, // 5: ExecutionResponseTypeFinalData.display_blocks:type_name -> ExecutionResponseDisplayBlock
	2,  // 6: ExecutionResponseTypeStepData.type:type_name -> ExecutionStepType
	10, // 7: ExecutionResponseTypeStepData.display_block:type_name -> ExecutionResponseDisplayBlock
	12, // 8: ExecutionResponseTypeStepData.data_inputs:type_name -> ExecutionStepDataInput
	3,  // 9: ExecutionStepDataInput.type:type_name -> ExecutionStepDataInputType
	14, // 10: SubmitExectuionStepRequest.input_values:type_name -> ExecutionStepDataInputValue
	0,  // 11: SubmitExectuionStepResponse.type:type_name -> ExecutionResponseType
	8,  // 12: SubmitExectuionStepResponse.data:type_name -> ExecutionResponseTypeData
	1,  // 13: GetExecutionStatusResponse.status:type_name -> ExecutionStatus
	4,  // 14: NuzurExtension.GetMetadata:input_type -> GetMetadataRequest
	6,  // 15: NuzurExtension.StartExecution:input_type -> StartExecutionRequest
	13, // 16: NuzurExtension.SubmitExectuionStep:input_type -> SubmitExectuionStepRequest
	16, // 17: NuzurExtension.GetExecutionStatus:input_type -> GetExecutionStatusRequest
	5,  // 18: NuzurExtension.GetMetadata:output_type -> GetMetadataResponse
	7,  // 19: NuzurExtension.StartExecution:output_type -> StartExecutionResponse
	15, // 20: NuzurExtension.SubmitExectuionStep:output_type -> SubmitExectuionStepResponse
	17, // 21: NuzurExtension.GetExecutionStatus:output_type -> GetExecutionStatusResponse
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_nuzur_extension_proto_init() }
func file_nuzur_extension_proto_init() {
	if File_nuzur_extension_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nuzur_extension_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nuzur_extension_proto_goTypes,
		DependencyIndexes: file_nuzur_extension_proto_depIdxs,
		EnumInfos:         file_nuzur_extension_proto_enumTypes,
		MessageInfos:      file_nuzur_extension_proto_msgTypes,
	}.Build()
	File_nuzur_extension_proto = out.File
	file_nuzur_extension_proto_rawDesc = nil
	file_nuzur_extension_proto_goTypes = nil
	file_nuzur_extension_proto_depIdxs = nil
}
