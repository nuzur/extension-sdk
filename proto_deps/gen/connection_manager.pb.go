// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: connection_manager.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	gen "github.com/nuzur/nem/idl/gen"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryExecutionStatus int32

const (
	QueryExecutionStatus_QUERY_EXECUTION_STATUS_INVALID     QueryExecutionStatus = 0
	QueryExecutionStatus_QUERY_EXECUTION_STATUS_IN_PROGRESS QueryExecutionStatus = 1
	QueryExecutionStatus_QUERY_EXECUTION_STATUS_SUCCEEDED   QueryExecutionStatus = 2
	QueryExecutionStatus_QUERY_EXECUTION_STATUS_FAILED      QueryExecutionStatus = 3
	QueryExecutionStatus_QUERY_EXECUTION_STATUS_CANCELLED   QueryExecutionStatus = 4
)

// Enum value maps for QueryExecutionStatus.
var (
	QueryExecutionStatus_name = map[int32]string{
		0: "QUERY_EXECUTION_STATUS_INVALID",
		1: "QUERY_EXECUTION_STATUS_IN_PROGRESS",
		2: "QUERY_EXECUTION_STATUS_SUCCEEDED",
		3: "QUERY_EXECUTION_STATUS_FAILED",
		4: "QUERY_EXECUTION_STATUS_CANCELLED",
	}
	QueryExecutionStatus_value = map[string]int32{
		"QUERY_EXECUTION_STATUS_INVALID":     0,
		"QUERY_EXECUTION_STATUS_IN_PROGRESS": 1,
		"QUERY_EXECUTION_STATUS_SUCCEEDED":   2,
		"QUERY_EXECUTION_STATUS_FAILED":      3,
		"QUERY_EXECUTION_STATUS_CANCELLED":   4,
	}
)

func (x QueryExecutionStatus) Enum() *QueryExecutionStatus {
	p := new(QueryExecutionStatus)
	*p = x
	return p
}

func (x QueryExecutionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryExecutionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_connection_manager_proto_enumTypes[0].Descriptor()
}

func (QueryExecutionStatus) Type() protoreflect.EnumType {
	return &file_connection_manager_proto_enumTypes[0]
}

func (x QueryExecutionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryExecutionStatus.Descriptor instead.
func (QueryExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{0}
}

type ChangesDiffStatus int32

const (
	ChangesDiffStatus_CHANGES_DIFF_STATUS_INVALID     ChangesDiffStatus = 0
	ChangesDiffStatus_CHANGES_DIFF_STATUS_IN_PROGRESS ChangesDiffStatus = 1
	ChangesDiffStatus_CHANGES_DIFF_STATUS_SUCCEEDED   ChangesDiffStatus = 2
	ChangesDiffStatus_CHANGES_DIFF_STATUS_FAILED      ChangesDiffStatus = 3
	ChangesDiffStatus_CHANGES_DIFF_STATUS_CANCELLED   ChangesDiffStatus = 4
)

// Enum value maps for ChangesDiffStatus.
var (
	ChangesDiffStatus_name = map[int32]string{
		0: "CHANGES_DIFF_STATUS_INVALID",
		1: "CHANGES_DIFF_STATUS_IN_PROGRESS",
		2: "CHANGES_DIFF_STATUS_SUCCEEDED",
		3: "CHANGES_DIFF_STATUS_FAILED",
		4: "CHANGES_DIFF_STATUS_CANCELLED",
	}
	ChangesDiffStatus_value = map[string]int32{
		"CHANGES_DIFF_STATUS_INVALID":     0,
		"CHANGES_DIFF_STATUS_IN_PROGRESS": 1,
		"CHANGES_DIFF_STATUS_SUCCEEDED":   2,
		"CHANGES_DIFF_STATUS_FAILED":      3,
		"CHANGES_DIFF_STATUS_CANCELLED":   4,
	}
)

func (x ChangesDiffStatus) Enum() *ChangesDiffStatus {
	p := new(ChangesDiffStatus)
	*p = x
	return p
}

func (x ChangesDiffStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangesDiffStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_connection_manager_proto_enumTypes[1].Descriptor()
}

func (ChangesDiffStatus) Type() protoreflect.EnumType {
	return &file_connection_manager_proto_enumTypes[1]
}

func (x ChangesDiffStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangesDiffStatus.Descriptor instead.
func (ChangesDiffStatus) EnumDescriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{1}
}

// connections start
type GetUserConnectionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConnectionsRequest) Reset() {
	*x = GetUserConnectionsRequest{}
	mi := &file_connection_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConnectionsRequest) ProtoMessage() {}

func (x *GetUserConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConnectionsRequest.ProtoReflect.Descriptor instead.
func (*GetUserConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{0}
}

type GetUserConnectionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connections   []*gen.UserConnection  `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConnectionsResponse) Reset() {
	*x = GetUserConnectionsResponse{}
	mi := &file_connection_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConnectionsResponse) ProtoMessage() {}

func (x *GetUserConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConnectionsResponse.ProtoReflect.Descriptor instead.
func (*GetUserConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserConnectionsResponse) GetConnections() []*gen.UserConnection {
	if x != nil {
		return x.Connections
	}
	return nil
}

type ClearUserConnectionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserUuid      string                 `protobuf:"bytes,1,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearUserConnectionsRequest) Reset() {
	*x = ClearUserConnectionsRequest{}
	mi := &file_connection_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearUserConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUserConnectionsRequest) ProtoMessage() {}

func (x *ClearUserConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUserConnectionsRequest.ProtoReflect.Descriptor instead.
func (*ClearUserConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{2}
}

func (x *ClearUserConnectionsRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

type ClearUserConnectionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearUserConnectionsResponse) Reset() {
	*x = ClearUserConnectionsResponse{}
	mi := &file_connection_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearUserConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUserConnectionsResponse) ProtoMessage() {}

func (x *ClearUserConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUserConnectionsResponse.ProtoReflect.Descriptor instead.
func (*ClearUserConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{3}
}

type TestConnectionRequest struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Type          gen.UserConnectionType        `protobuf:"varint,3,opt,name=type,proto3,enum=nem.UserConnectionType" json:"type,omitempty"`
	TypeConfig    *gen.UserConnectionTypeConfig `protobuf:"bytes,4,opt,name=type_config,json=typeConfig,proto3" json:"type_config,omitempty"`
	Schema        string                        `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestConnectionRequest) Reset() {
	*x = TestConnectionRequest{}
	mi := &file_connection_manager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConnectionRequest) ProtoMessage() {}

func (x *TestConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConnectionRequest.ProtoReflect.Descriptor instead.
func (*TestConnectionRequest) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{4}
}

func (x *TestConnectionRequest) GetType() gen.UserConnectionType {
	if x != nil {
		return x.Type
	}
	return gen.UserConnectionType(0)
}

func (x *TestConnectionRequest) GetTypeConfig() *gen.UserConnectionTypeConfig {
	if x != nil {
		return x.TypeConfig
	}
	return nil
}

func (x *TestConnectionRequest) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type TestConnectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestConnectionResponse) Reset() {
	*x = TestConnectionResponse{}
	mi := &file_connection_manager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConnectionResponse) ProtoMessage() {}

func (x *TestConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConnectionResponse.ProtoReflect.Descriptor instead.
func (*TestConnectionResponse) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{5}
}

func (x *TestConnectionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TestConnectionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// query executions start
type ExecuteQueryRequest struct {
	state              protoimpl.MessageState        `protogen:"open.v1"`
	ProjectUuid        string                        `protobuf:"bytes,1,opt,name=project_uuid,json=projectUuid,proto3" json:"project_uuid,omitempty"`
	ProjectVersionUuid string                        `protobuf:"bytes,2,opt,name=project_version_uuid,json=projectVersionUuid,proto3" json:"project_version_uuid,omitempty"`
	Type               gen.UserConnectionType        `protobuf:"varint,3,opt,name=type,proto3,enum=nem.UserConnectionType" json:"type,omitempty"`
	TypeConfig         *gen.UserConnectionTypeConfig `protobuf:"bytes,4,opt,name=type_config,json=typeConfig,proto3" json:"type_config,omitempty"`
	Schema             string                        `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	RawQuery           string                        `protobuf:"bytes,6,opt,name=raw_query,json=rawQuery,proto3" json:"raw_query,omitempty"`
	FilePath           string                        `protobuf:"bytes,7,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Locale             string                        `protobuf:"bytes,8,opt,name=locale,proto3" json:"locale,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ExecuteQueryRequest) Reset() {
	*x = ExecuteQueryRequest{}
	mi := &file_connection_manager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryRequest) ProtoMessage() {}

func (x *ExecuteQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryRequest.ProtoReflect.Descriptor instead.
func (*ExecuteQueryRequest) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{6}
}

func (x *ExecuteQueryRequest) GetProjectUuid() string {
	if x != nil {
		return x.ProjectUuid
	}
	return ""
}

func (x *ExecuteQueryRequest) GetProjectVersionUuid() string {
	if x != nil {
		return x.ProjectVersionUuid
	}
	return ""
}

func (x *ExecuteQueryRequest) GetType() gen.UserConnectionType {
	if x != nil {
		return x.Type
	}
	return gen.UserConnectionType(0)
}

func (x *ExecuteQueryRequest) GetTypeConfig() *gen.UserConnectionTypeConfig {
	if x != nil {
		return x.TypeConfig
	}
	return nil
}

func (x *ExecuteQueryRequest) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *ExecuteQueryRequest) GetRawQuery() string {
	if x != nil {
		return x.RawQuery
	}
	return ""
}

func (x *ExecuteQueryRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ExecuteQueryRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type ExecuteQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionUuid string                 `protobuf:"bytes,1,opt,name=execution_uuid,json=executionUuid,proto3" json:"execution_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteQueryResponse) Reset() {
	*x = ExecuteQueryResponse{}
	mi := &file_connection_manager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryResponse) ProtoMessage() {}

func (x *ExecuteQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryResponse.ProtoReflect.Descriptor instead.
func (*ExecuteQueryResponse) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{7}
}

func (x *ExecuteQueryResponse) GetExecutionUuid() string {
	if x != nil {
		return x.ExecutionUuid
	}
	return ""
}

type GetQueryExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionUuid string                 `protobuf:"bytes,1,opt,name=execution_uuid,json=executionUuid,proto3" json:"execution_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryExecutionRequest) Reset() {
	*x = GetQueryExecutionRequest{}
	mi := &file_connection_manager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryExecutionRequest) ProtoMessage() {}

func (x *GetQueryExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryExecutionRequest.ProtoReflect.Descriptor instead.
func (*GetQueryExecutionRequest) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{8}
}

func (x *GetQueryExecutionRequest) GetExecutionUuid() string {
	if x != nil {
		return x.ExecutionUuid
	}
	return ""
}

type GetQueryExecutionResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Status        QueryExecutionStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=QueryExecutionStatus" json:"status,omitempty"`
	Message       string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result        *gen.UserConnectionExecution `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryExecutionResponse) Reset() {
	*x = GetQueryExecutionResponse{}
	mi := &file_connection_manager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryExecutionResponse) ProtoMessage() {}

func (x *GetQueryExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryExecutionResponse.ProtoReflect.Descriptor instead.
func (*GetQueryExecutionResponse) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{9}
}

func (x *GetQueryExecutionResponse) GetStatus() QueryExecutionStatus {
	if x != nil {
		return x.Status
	}
	return QueryExecutionStatus_QUERY_EXECUTION_STATUS_INVALID
}

func (x *GetQueryExecutionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetQueryExecutionResponse) GetResult() *gen.UserConnectionExecution {
	if x != nil {
		return x.Result
	}
	return nil
}

type CancelQueryExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionUuid string                 `protobuf:"bytes,1,opt,name=execution_uuid,json=executionUuid,proto3" json:"execution_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelQueryExecutionRequest) Reset() {
	*x = CancelQueryExecutionRequest{}
	mi := &file_connection_manager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelQueryExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQueryExecutionRequest) ProtoMessage() {}

func (x *CancelQueryExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQueryExecutionRequest.ProtoReflect.Descriptor instead.
func (*CancelQueryExecutionRequest) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{10}
}

func (x *CancelQueryExecutionRequest) GetExecutionUuid() string {
	if x != nil {
		return x.ExecutionUuid
	}
	return ""
}

type CancelQueryExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelQueryExecutionResponse) Reset() {
	*x = CancelQueryExecutionResponse{}
	mi := &file_connection_manager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelQueryExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQueryExecutionResponse) ProtoMessage() {}

func (x *CancelQueryExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQueryExecutionResponse.ProtoReflect.Descriptor instead.
func (*CancelQueryExecutionResponse) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{11}
}

// diff changes start
type StartChangesDiffRequest struct {
	state              protoimpl.MessageState        `protogen:"open.v1"`
	ProjectUuid        string                        `protobuf:"bytes,1,opt,name=project_uuid,json=projectUuid,proto3" json:"project_uuid,omitempty"`
	ProjectVersionUuid string                        `protobuf:"bytes,2,opt,name=project_version_uuid,json=projectVersionUuid,proto3" json:"project_version_uuid,omitempty"`
	Type               gen.UserConnectionType        `protobuf:"varint,3,opt,name=type,proto3,enum=nem.UserConnectionType" json:"type,omitempty"`
	TypeConfig         *gen.UserConnectionTypeConfig `protobuf:"bytes,4,opt,name=type_config,json=typeConfig,proto3" json:"type_config,omitempty"`
	Schema             string                        `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema,omitempty"`
	Locale             string                        `protobuf:"bytes,6,opt,name=locale,proto3" json:"locale,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StartChangesDiffRequest) Reset() {
	*x = StartChangesDiffRequest{}
	mi := &file_connection_manager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartChangesDiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChangesDiffRequest) ProtoMessage() {}

func (x *StartChangesDiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChangesDiffRequest.ProtoReflect.Descriptor instead.
func (*StartChangesDiffRequest) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{12}
}

func (x *StartChangesDiffRequest) GetProjectUuid() string {
	if x != nil {
		return x.ProjectUuid
	}
	return ""
}

func (x *StartChangesDiffRequest) GetProjectVersionUuid() string {
	if x != nil {
		return x.ProjectVersionUuid
	}
	return ""
}

func (x *StartChangesDiffRequest) GetType() gen.UserConnectionType {
	if x != nil {
		return x.Type
	}
	return gen.UserConnectionType(0)
}

func (x *StartChangesDiffRequest) GetTypeConfig() *gen.UserConnectionTypeConfig {
	if x != nil {
		return x.TypeConfig
	}
	return nil
}

func (x *StartChangesDiffRequest) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *StartChangesDiffRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type StartChangesDiffResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChangesDiffUuid string                 `protobuf:"bytes,1,opt,name=changes_diff_uuid,json=changesDiffUuid,proto3" json:"changes_diff_uuid,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StartChangesDiffResponse) Reset() {
	*x = StartChangesDiffResponse{}
	mi := &file_connection_manager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartChangesDiffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChangesDiffResponse) ProtoMessage() {}

func (x *StartChangesDiffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChangesDiffResponse.ProtoReflect.Descriptor instead.
func (*StartChangesDiffResponse) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{13}
}

func (x *StartChangesDiffResponse) GetChangesDiffUuid() string {
	if x != nil {
		return x.ChangesDiffUuid
	}
	return ""
}

type GetChangesDiffRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChangesDiffUuid string                 `protobuf:"bytes,1,opt,name=changes_diff_uuid,json=changesDiffUuid,proto3" json:"changes_diff_uuid,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetChangesDiffRequest) Reset() {
	*x = GetChangesDiffRequest{}
	mi := &file_connection_manager_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangesDiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangesDiffRequest) ProtoMessage() {}

func (x *GetChangesDiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangesDiffRequest.ProtoReflect.Descriptor instead.
func (*GetChangesDiffRequest) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{14}
}

func (x *GetChangesDiffRequest) GetChangesDiffUuid() string {
	if x != nil {
		return x.ChangesDiffUuid
	}
	return ""
}

type GetChangesDiffResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Status         ChangesDiffStatus      `protobuf:"varint,1,opt,name=status,proto3,enum=ChangesDiffStatus" json:"status,omitempty"`
	Message        string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`               // returns updates while in progress to display to user
	Apply          string                 `protobuf:"bytes,3,opt,name=apply,proto3" json:"apply,omitempty"`                   // only available when status is SUCCEEDED
	ContextualDiff string                 `protobuf:"bytes,4,opt,name=contextualDiff,proto3" json:"contextualDiff,omitempty"` // only available when status is SUCCEEDED and for mysql
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetChangesDiffResponse) Reset() {
	*x = GetChangesDiffResponse{}
	mi := &file_connection_manager_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangesDiffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangesDiffResponse) ProtoMessage() {}

func (x *GetChangesDiffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangesDiffResponse.ProtoReflect.Descriptor instead.
func (*GetChangesDiffResponse) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{15}
}

func (x *GetChangesDiffResponse) GetStatus() ChangesDiffStatus {
	if x != nil {
		return x.Status
	}
	return ChangesDiffStatus_CHANGES_DIFF_STATUS_INVALID
}

func (x *GetChangesDiffResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChangesDiffResponse) GetApply() string {
	if x != nil {
		return x.Apply
	}
	return ""
}

func (x *GetChangesDiffResponse) GetContextualDiff() string {
	if x != nil {
		return x.ContextualDiff
	}
	return ""
}

type CancelChangesDiffRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChangesDiffUuid string                 `protobuf:"bytes,1,opt,name=changes_diff_uuid,json=changesDiffUuid,proto3" json:"changes_diff_uuid,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CancelChangesDiffRequest) Reset() {
	*x = CancelChangesDiffRequest{}
	mi := &file_connection_manager_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelChangesDiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelChangesDiffRequest) ProtoMessage() {}

func (x *CancelChangesDiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelChangesDiffRequest.ProtoReflect.Descriptor instead.
func (*CancelChangesDiffRequest) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{16}
}

func (x *CancelChangesDiffRequest) GetChangesDiffUuid() string {
	if x != nil {
		return x.ChangesDiffUuid
	}
	return ""
}

type CancelChangesDiffResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelChangesDiffResponse) Reset() {
	*x = CancelChangesDiffResponse{}
	mi := &file_connection_manager_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelChangesDiffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelChangesDiffResponse) ProtoMessage() {}

func (x *CancelChangesDiffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_manager_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelChangesDiffResponse.ProtoReflect.Descriptor instead.
func (*CancelChangesDiffResponse) Descriptor() ([]byte, []int) {
	return file_connection_manager_proto_rawDescGZIP(), []int{17}
}

var File_connection_manager_proto protoreflect.FileDescriptor

var file_connection_manager_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x21, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x53, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x0a, 0x1b, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6e, 0x65,
	0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6e, 0x65, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a,
	0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x22, 0x57, 0x0a, 0x16, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc1, 0x02, 0x0a, 0x13,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x6d, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x6d,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x61, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22,
	0x3d, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x22, 0x41,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69,
	0x64, 0x22, 0x9a, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x6d, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x44,
	0x0a, 0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x6d, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x65, 0x22, 0x46, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x55, 0x75, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x64,
	0x69, 0x66, 0x66, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x55, 0x75, 0x69, 0x64, 0x22,
	0x9c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69,
	0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x22, 0x46,
	0x0a, 0x18, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44,
	0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69,
	0x66, 0x66, 0x55, 0x75, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2a, 0xd1, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e,
	0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x26, 0x0a, 0x22, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x21,
	0x0a, 0x1d, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x24, 0x0a, 0x20, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x2a, 0xbf, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x1b, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x5f, 0x44, 0x49, 0x46, 0x46, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x23,
	0x0a, 0x1f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x5f, 0x44, 0x49, 0x46, 0x46, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x5f, 0x44,
	0x49, 0x46, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x45, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x53, 0x5f, 0x44, 0x49, 0x46, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x53, 0x5f, 0x44, 0x49, 0x46, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x32, 0xc7, 0x05, 0x0a, 0x16, 0x4e, 0x75,
	0x7a, 0x75, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x14, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x14, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55,
	0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x12, 0x18, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69,
	0x66, 0x66, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44,
	0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x12, 0x19, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x27, 0x0a, 0x05, 0x6e, 0x75, 0x7a, 0x75, 0x72, 0x42, 0x16, 0x4e, 0x75,
	0x7a, 0x75, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x50, 0x01, 0x5a, 0x04, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_connection_manager_proto_rawDescOnce sync.Once
	file_connection_manager_proto_rawDescData []byte
)

func file_connection_manager_proto_rawDescGZIP() []byte {
	file_connection_manager_proto_rawDescOnce.Do(func() {
		file_connection_manager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_connection_manager_proto_rawDesc), len(file_connection_manager_proto_rawDesc)))
	})
	return file_connection_manager_proto_rawDescData
}

var file_connection_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_connection_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_connection_manager_proto_goTypes = []any{
	(QueryExecutionStatus)(0),            // 0: QueryExecutionStatus
	(ChangesDiffStatus)(0),               // 1: ChangesDiffStatus
	(*GetUserConnectionsRequest)(nil),    // 2: GetUserConnectionsRequest
	(*GetUserConnectionsResponse)(nil),   // 3: GetUserConnectionsResponse
	(*ClearUserConnectionsRequest)(nil),  // 4: ClearUserConnectionsRequest
	(*ClearUserConnectionsResponse)(nil), // 5: ClearUserConnectionsResponse
	(*TestConnectionRequest)(nil),        // 6: TestConnectionRequest
	(*TestConnectionResponse)(nil),       // 7: TestConnectionResponse
	(*ExecuteQueryRequest)(nil),          // 8: ExecuteQueryRequest
	(*ExecuteQueryResponse)(nil),         // 9: ExecuteQueryResponse
	(*GetQueryExecutionRequest)(nil),     // 10: GetQueryExecutionRequest
	(*GetQueryExecutionResponse)(nil),    // 11: GetQueryExecutionResponse
	(*CancelQueryExecutionRequest)(nil),  // 12: CancelQueryExecutionRequest
	(*CancelQueryExecutionResponse)(nil), // 13: CancelQueryExecutionResponse
	(*StartChangesDiffRequest)(nil),      // 14: StartChangesDiffRequest
	(*StartChangesDiffResponse)(nil),     // 15: StartChangesDiffResponse
	(*GetChangesDiffRequest)(nil),        // 16: GetChangesDiffRequest
	(*GetChangesDiffResponse)(nil),       // 17: GetChangesDiffResponse
	(*CancelChangesDiffRequest)(nil),     // 18: CancelChangesDiffRequest
	(*CancelChangesDiffResponse)(nil),    // 19: CancelChangesDiffResponse
	(*gen.UserConnection)(nil),           // 20: nem.UserConnection
	(gen.UserConnectionType)(0),          // 21: nem.UserConnectionType
	(*gen.UserConnectionTypeConfig)(nil), // 22: nem.UserConnectionTypeConfig
	(*gen.UserConnectionExecution)(nil),  // 23: nem.UserConnectionExecution
}
var file_connection_manager_proto_depIdxs = []int32{
	20, // 0: GetUserConnectionsResponse.connections:type_name -> nem.UserConnection
	21, // 1: TestConnectionRequest.type:type_name -> nem.UserConnectionType
	22, // 2: TestConnectionRequest.type_config:type_name -> nem.UserConnectionTypeConfig
	21, // 3: ExecuteQueryRequest.type:type_name -> nem.UserConnectionType
	22, // 4: ExecuteQueryRequest.type_config:type_name -> nem.UserConnectionTypeConfig
	0,  // 5: GetQueryExecutionResponse.status:type_name -> QueryExecutionStatus
	23, // 6: GetQueryExecutionResponse.result:type_name -> nem.UserConnectionExecution
	21, // 7: StartChangesDiffRequest.type:type_name -> nem.UserConnectionType
	22, // 8: StartChangesDiffRequest.type_config:type_name -> nem.UserConnectionTypeConfig
	1,  // 9: GetChangesDiffResponse.status:type_name -> ChangesDiffStatus
	2,  // 10: NuzurConnectionManager.GetUserConnections:input_type -> GetUserConnectionsRequest
	4,  // 11: NuzurConnectionManager.ClearUserConnections:input_type -> ClearUserConnectionsRequest
	6,  // 12: NuzurConnectionManager.TestConnection:input_type -> TestConnectionRequest
	8,  // 13: NuzurConnectionManager.ExecuteQuery:input_type -> ExecuteQueryRequest
	10, // 14: NuzurConnectionManager.GetQueryExecution:input_type -> GetQueryExecutionRequest
	12, // 15: NuzurConnectionManager.CancelQueryExecution:input_type -> CancelQueryExecutionRequest
	14, // 16: NuzurConnectionManager.StartChangesDiff:input_type -> StartChangesDiffRequest
	16, // 17: NuzurConnectionManager.GetChangesDiff:input_type -> GetChangesDiffRequest
	18, // 18: NuzurConnectionManager.CancelChangesDiff:input_type -> CancelChangesDiffRequest
	3,  // 19: NuzurConnectionManager.GetUserConnections:output_type -> GetUserConnectionsResponse
	5,  // 20: NuzurConnectionManager.ClearUserConnections:output_type -> ClearUserConnectionsResponse
	7,  // 21: NuzurConnectionManager.TestConnection:output_type -> TestConnectionResponse
	9,  // 22: NuzurConnectionManager.ExecuteQuery:output_type -> ExecuteQueryResponse
	11, // 23: NuzurConnectionManager.GetQueryExecution:output_type -> GetQueryExecutionResponse
	13, // 24: NuzurConnectionManager.CancelQueryExecution:output_type -> CancelQueryExecutionResponse
	15, // 25: NuzurConnectionManager.StartChangesDiff:output_type -> StartChangesDiffResponse
	17, // 26: NuzurConnectionManager.GetChangesDiff:output_type -> GetChangesDiffResponse
	19, // 27: NuzurConnectionManager.CancelChangesDiff:output_type -> CancelChangesDiffResponse
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_connection_manager_proto_init() }
func file_connection_manager_proto_init() {
	if File_connection_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_connection_manager_proto_rawDesc), len(file_connection_manager_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_connection_manager_proto_goTypes,
		DependencyIndexes: file_connection_manager_proto_depIdxs,
		EnumInfos:         file_connection_manager_proto_enumTypes,
		MessageInfos:      file_connection_manager_proto_msgTypes,
	}.Build()
	File_connection_manager_proto = out.File
	file_connection_manager_proto_goTypes = nil
	file_connection_manager_proto_depIdxs = nil
}
